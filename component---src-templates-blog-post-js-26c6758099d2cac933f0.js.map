{"version":3,"sources":["webpack:///./src/components/_shared/styled-headings.js","webpack:///./src/templates/blog-post.js"],"names":["StyledH1","styled","h1","StyledH2","h2","StyledBlogSection","StyledSection","StyledBlogTitle","StyledDate","div","StyledBlogText","BlogPost","data","readingTime","markdownRemark","fields","text","post","coverImage","frontmatter","cover_image","childImageSharp","fluid","tags","title","date","menuLinks","blogMenuLinks","dangerouslySetInnerHTML","__html","html"],"mappings":"83BAEO,IAAMA,EAAWC,IAAOC,GAAV,KAqBRC,EAAWF,IAAOG,GAAV,M,syBCZrB,IAAMC,EAAoBJ,YAAOK,IAAPL,CAAH,KAOjBM,EAAkBN,YAAOD,IAAPC,CAAH,KAGfO,EAAaP,IAAOQ,IAAV,KAOVC,EAAiBT,IAAOQ,IAAV,KAkCLE,UAzBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAcD,EAAKE,eAAeC,OAAOF,YAAYG,KACrDC,EAAOL,EAAKE,eACZI,EAAaD,EAAKE,YAAYC,YAAcH,EAAKE,YAAYC,YAAYC,gBAAgBC,MAAQ,KAH1E,EAIML,EAAKE,YAJX,IAIrBI,YAJqB,MAId,GAJc,EAIVC,EAJU,EAIVA,MAAOC,EAJG,EAIHA,KAE1B,OACE,kBAAC,IAAD,CAAQC,UAAWC,KACjB,kBAACtB,EAAD,KACE,kBAACE,EAAD,KAAkBiB,GAClB,kBAAChB,EAAD,eACUiB,EADV,KACiB,8BAAOZ,EAAP,MAEjB,kBAAC,IAAD,CAASU,KAAMA,IACdL,GAAc,kBAAC,IAAD,CAAKI,MAAOJ,IAC3B,kBAACR,EAAD,CAAgBkB,wBAAyB,CAAEC,OAAQZ,EAAKa","file":"component---src-templates-blog-post-js-26c6758099d2cac933f0.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  width: 100%;\n  position: relative;\n  font-weight: 800;\n  margin: 20px 0;\n\n  &:first-letter {\n    color: var(--primary-color);\n  }\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  color: var(--title-color);\n  margin: 20px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport TagList from '../components/tag-list';\nimport { blogMenuLinks } from '../components/_config/menu-links';\nimport { StyledH1 } from '../components/_shared/styled-headings';\nimport { StyledSection } from '../components/_shared/styled-section';\n\nconst StyledBlogSection = styled(StyledSection)`\n  min-height: calc(100vh - var(--header-height));\n\n  & > .gatsby-image-wrapper {\n    width: 100%;\n  }\n`;\nconst StyledBlogTitle = styled(StyledH1)`\n  margin-top: 3rem;\n`;\nconst StyledDate = styled.div`\n  font-size: 0.8rem;\n\n  & span {\n    font-weight: 500;\n  }\n`;\nconst StyledBlogText = styled.div`\n  padding: 2rem;\n  width: 100%;\n  background: var(--bg-code);\n  border-radius: var(--radius);\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n`;\n\nconst BlogPost = ({ data }) => {\n  const readingTime = data.markdownRemark.fields.readingTime.text;\n  const post = data.markdownRemark;\n  const coverImage = post.frontmatter.cover_image ? post.frontmatter.cover_image.childImageSharp.fluid : null;\n  const { tags = [], title, date } = post.frontmatter;\n\n  return (\n    <Layout menuLinks={blogMenuLinks}>\n      <StyledBlogSection>\n        <StyledBlogTitle>{title}</StyledBlogTitle>\n        <StyledDate>\n          Posted {date}. <span>{readingTime}.</span>\n        </StyledDate>\n        <TagList tags={tags} />\n        {coverImage && <Img fluid={coverImage} />}\n        <StyledBlogText dangerouslySetInnerHTML={{ __html: post.html }} />\n      </StyledBlogSection>\n    </Layout>\n  );\n};\n\nBlogPost.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"D. MMMM YYYY\")\n        cover_image {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
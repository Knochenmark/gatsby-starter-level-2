{"version":3,"sources":["webpack:///./src/components/project-list.js","webpack:///./src/pages/projects.js","webpack:///./src/components/_shared/styled-separator.js","webpack:///./src/components/tech-list.js","webpack:///./src/components/_shared/styled-headings.js","webpack:///./src/components/_shared/styled-content-link.js","webpack:///./src/components/_shared/styled-text-section.js"],"names":["StyledProject","styled","article","StyledHeader","header","StyledLinkContainer","section","flexEnd","StyledInfoContainer","StyledProjectText","StyledTextSection","ProjectList","projects","map","project","title","frontmatter","demoLink","demo_link","repoLink","repo_link","demoLinkLabel","repoLinkLabel","key","href","target","rel","aria-label","icon","prefix","dangerouslySetInnerHTML","__html","html","techs","StyledProjectsH1","StyledH1","Projects","nodes","data","allMarkdownRemark","menuLinks","blogMenuLinks","StyledSeparator","div","StyledTechContainer","StyledTag","span","TechList","tech","h1","StyledH2","h2","StyledContentLink","a","contentBox"],"mappings":"gqCAUA,IAAMA,EAAgBC,IAAOC,QAAV,KAKbC,EAAeF,IAAOG,OAAV,KAIZC,EAAsBJ,IAAOK,QAAV,IACrBC,KAmBEC,EAAsBP,IAAOK,QAAV,KAKnBG,EAAoBR,YAAOS,IAAPT,CAAH,KAiDRU,EAxCK,SAAC,GACnB,OADoC,EAAfC,SACLC,KAAI,SAACC,GACnB,IAAMC,EAAQD,EAAQE,YAAYD,MAC5BE,EAAWH,EAAQE,YAAYE,UAC/BC,EAAWL,EAAQE,YAAYI,UAC/BC,EAAa,oBAAuBN,EAAvB,QACbO,EAAa,oBAAuBP,EAAvB,QAEnB,OACE,kBAACf,EAAD,CAAeuB,IAAKR,GAClB,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAmBqB,KAAMP,IAAsBE,GAAsB,KAAKM,OAAO,SAASC,IAAI,YAC5F,kBAAC,IAAD,KAAWX,IAEb,kBAACV,EAAD,KACGc,GACC,uBAAGK,KAAML,EAAUM,OAAO,SAASC,IAAI,WAAWX,MAAM,kBAAkBY,aAAYL,GACpF,kBAAC,IAAD,CAAMM,KAAK,SAASC,OAAO,SAG9BZ,GACC,uBAAGO,KAAMP,EAAUQ,OAAO,SAASC,IAAI,WAAWX,MAAM,YAAYY,aAAYN,GAC9E,kBAAC,IAAD,CAAMO,KAAK,yBAKnB,kBAACpB,EAAD,KACE,kBAACC,EAAD,CAAmBqB,wBAAyB,CAAEC,OAAQjB,EAAQkB,QAC9D,kBAAC,IAAD,CAAUC,MAAOnB,EAAQE,YAAYiB,c,4ICvE/C,IAAMC,EAAmBjC,YAAOkC,IAAPlC,CAAH,KAoBPmC,UAjBE,SAAC,GAIX,IAFkBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAGvB,OACE,kBAAC,IAAD,CAAQG,UAAWC,KACjB,kBAAC,IAAD,CAAK1B,MAAM,aACX,kBAAC,IAAD,KACE,kBAACmB,EAAD,iBACA,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAatB,SAAUyB,Q,wPCvBxB,IAAMK,E,UAAkBzC,EAAO0C,IAAV,M,siBCG5B,IAAMC,EAAsB3C,IAAOK,QAAV,KAKnBuC,EAAY5C,IAAO6C,KAAV,KAiCAC,IAjBE,SAAC,GAAe,IAAbd,EAAY,EAAZA,MAClB,OACE,kBAACW,EAAD,KACGX,EAAMpB,KAAI,SAACmC,GAAD,OACT,kBAACH,EAAD,CAAWtB,IAAKyB,GACd,kBAAC,IAAD,CAAMpB,KAAK,gBACVoB,S,o0BC9BJ,IAAMb,EAAWlC,IAAOgD,GAAV,KAqBRC,EAAWjD,IAAOkD,GAAV,M,qQCrBd,IAAMC,E,UAAoBnD,EAAOoD,EAAV,M,0ZCCvB,IAAM3C,EAAoBT,IAAOK,QAAV,IAG1BgD","file":"component---src-pages-projects-js-46bf2cdc8038906e65e0.js","sourcesContent":["import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\nimport TechList from './tech-list';\nimport { StyledContentLink } from './_shared/styled-content-link';\nimport { StyledH2 } from './_shared/styled-headings';\nimport { flexEnd } from './_shared/styled-mixins';\nimport { StyledTextSection } from './_shared/styled-text-section';\n\nconst StyledProject = styled.article`\n  display: flex;\n  flex-direction: column;\n  padding-top: 2.5rem;\n`;\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n`;\nconst StyledLinkContainer = styled.section`\n  ${flexEnd};\n  margin: 10px 0;\n\n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--body-color);\n\n    &:hover {\n      color: var(--primary-color);\n    }\n  }\n\n  & svg {\n    fill: currentColor;\n    margin: 0 0.5rem;\n  }\n`;\nconst StyledInfoContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst StyledProjectText = styled(StyledTextSection)`\n  > p {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;\n    overflow: hidden;\n  }\n`;\n\nconst ProjectList = ({ projects }) => {\n  return projects.map((project) => {\n    const title = project.frontmatter.title;\n    const demoLink = project.frontmatter.demo_link;\n    const repoLink = project.frontmatter.repo_link;\n    const demoLinkLabel = `featured project ${title} demo`;\n    const repoLinkLabel = `featured project ${title} repo`;\n\n    return (\n      <StyledProject key={title}>\n        <StyledHeader>\n          <StyledContentLink href={demoLink ? demoLink : repoLink ? repoLink : '#'} target=\"_blank\" rel=\"noopener\">\n            <StyledH2>{title}</StyledH2>\n          </StyledContentLink>\n          <StyledLinkContainer>\n            {repoLink && (\n              <a href={repoLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"github\" prefix=\"fab\" />\n              </a>\n            )}\n            {demoLink && (\n              <a href={demoLink} target=\"_blank\" rel=\"noopener\" title=\"Demo Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"external-link-alt\" />\n              </a>\n            )}\n          </StyledLinkContainer>\n        </StyledHeader>\n        <StyledInfoContainer>\n          <StyledProjectText dangerouslySetInnerHTML={{ __html: project.html }} />\n          <TechList techs={project.frontmatter.techs} />\n        </StyledInfoContainer>\n      </StyledProject>\n    );\n  });\n};\n\nProjectList.propTypes = {\n  projects: PropTypes.array.isRequired,\n};\n\nexport default ProjectList;\n","import styled from '@emotion/styled';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport ProjectList from '../components/project-list';\nimport SEO from '../components/seo';\nimport { blogMenuLinks } from '../components/_config/menu-links';\nimport { StyledH1 } from '../components/_shared/styled-headings';\nimport { StyledFullHeightSection } from '../components/_shared/styled-section';\nimport { StyledSeparator } from '../components/_shared/styled-separator';\n\nconst StyledProjectsH1 = styled(StyledH1)`\n  margin-top: 3rem;\n`;\nconst Projects = ({\n  data: {\n    allMarkdownRemark: { nodes },\n  },\n}) => {\n  return (\n    <Layout menuLinks={blogMenuLinks}>\n      <SEO title=\"Projects\" />\n      <StyledFullHeightSection>\n        <StyledProjectsH1>Projects</StyledProjectsH1>\n        <StyledSeparator />\n        <ProjectList projects={nodes} />\n      </StyledFullHeightSection>\n    </Layout>\n  );\n};\n\nexport default Projects;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" }, frontmatter: { featured: { eq: false } } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"D MMMM, YYYY\")\n          title\n          repo_link\n          demo_link\n          techs\n        }\n        html\n      }\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledSeparator = styled.div`\n  height: 1px;\n  width: 100%;\n  margin-top: 3rem;\n  background-color: var(--body-color);\n`;\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\n\nconst StyledTechContainer = styled.section`\n  margin-top: 0.8rem;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst StyledTag = styled.span`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: 0.8rem;\n\n  color: var(--body-color);\n  margin: 0 1rem 0.5rem 0;\n\n  & > svg {\n    color: var(--primary-color);\n    height: 0.8rem;\n    margin-right: 0.25rem;\n  }\n`;\n\nconst TechList = ({ techs }) => {\n  return (\n    <StyledTechContainer>\n      {techs.map((tech) => (\n        <StyledTag key={tech}>\n          <Icon icon=\"caret-right\" />\n          {tech}\n        </StyledTag>\n      ))}\n    </StyledTechContainer>\n  );\n};\n\nTechList.propTypes = {\n  techs: PropTypes.array.isRequired,\n};\n\nexport default TechList;\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  width: 100%;\n  position: relative;\n  font-weight: 800;\n  margin: 20px 0;\n\n  &:first-letter {\n    color: var(--primary-color);\n  }\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  color: var(--title-color);\n  margin: 20px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContentLink = styled.a`\n  text-decoration: none;\n\n  &:hover > * {\n    cursor: pointer;\n    color: var(--primary-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { contentBox } from './styled-mixins';\n\nexport const StyledTextSection = styled.section`\n  white-space: pre-line;\n\n  ${contentBox}\n  max-width: unset;\n  max-height: 180px;\n  position: relative;\n  padding: 10px;\n  margin: 0;\n\n  > p {\n    height: 100%;\n    margin: 0;\n    font-size: 0.8rem;\n    overflow: hidden;\n  }\n`;\n"],"sourceRoot":""}